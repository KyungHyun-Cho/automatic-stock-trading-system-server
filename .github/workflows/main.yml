# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ change-framework ]
  pull_request:
    branches: [ change-framework ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup VirtualEnv
        run: |
          pip install virtualenv
          python -m virtualenv venv
          . venv/bin/activate
          pip install --no-cache-dir -r requirements.txt
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and push Docker image
        run: |
          echo 'export TAG=0.1.${BUILD_NUMBER}'
          echo 'export IMAGE_NAME=asts'
          echo 'export DOCKER_USER=sugarpowder'
          echo 'export DOCKER_PASS=sugar1234'
          . venv/bin/activate
          docker build -t $IMAGE_NAME:$TAG .
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push $DOCKER_USER/$IMAGE_NAME:$TAG
